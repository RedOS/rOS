Startup = {}
Startup.Running=true
Startup.Timer=os.startTimer(60/72)
Startup.Apis=fs.list("System/API/")
for i=1,#Startup.Apis do
if Startup.Apis[i]~=".DS_Store" then
os.loadAPI("System/API/"..Startup.Apis[i])
end
end
CHAT_CHANNEL=65530
Core.MainTerm=Screen.Create(term.current(),1,1,Screen.Width,Screen.Height)
Core.Status = Screen.Create(Core.MainTerm,1,1,Screen.Width,1)
local tEnv = {
	[ "shell" ] = shell,
	[ "multishell" ] = multishell,
}
Startup.Process = Core.launch(tEnv,"System/Lock.lua",Startup.Status)
Core.Window.updateColors()
Core.Status.updateColors()
while Startup.Running do
	local Event={os.pullEventRaw()}
	if Event[1]=="timer" and Event[2]==Startup.Timer then Draw.status() Startup.Timer=os.startTimer(60/72) end
	if Event[1]=="key" and Event[2]==keys.f4 then break end
	if Event[1]=="mouse_click" and Event[4]==1 then
		Draw.center=false
		Draw.status()
		if Event[3]==2 then Startup.Process = Core.launch(tEnv,"System/Lock.lua",Startup.Status) end
		if Event[3]==4 then os.sleep(.15) os.reboot() end
		if Event[3]==6 then os.sleep(.15) os.shutdown() end
		if Event[3]==Screen.Width/2-2 then Core.setData("Modem",not Core.getData("Modem")) Draw.status() end
		if Event[3]==Screen.Width/2 then Core.setData('H24',not Core.getData('H24')) Draw.status() end
		if Event[3]==Screen.Width/2+2 then Core.setData("Notifications",not Core.getData("Notifications")) Draw.status() end
	else
		if (Event[1]=="mouse_click" or Event[1]=="monitor_touch" or Event[1]=="mouse_drag") and Event[4]>1 then Event[4]=Event[4]-1 if not Draw.center then Draw.center=true end Draw.status() end
		ok,result=coroutine.resume(Core.thread,unpack(Event))
	end
end