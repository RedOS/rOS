tApis=fs.list("System/API/")
for i=1,#tApis do
os.loadAPI("System/API/"..tApis[i])
end
local tEnv = {
	[ "shell" ] = shell,
	[ "multishell" ] = multishell,
}
tChatHistory={}
for i=1,17 do
tChatHistory[i]=""
end
CHAT_CHANNEL=65530
Core.timer=os.startTimer(60/72)
Core.launch(tEnv,"System/Lock.lua")
while Core do
	local tEvent={os.pullEventRaw()}
	if tEvent[1]=="timer" and tEvent[2]==Core.timer then Draw.status() Core.timer=os.startTimer(60/72)
	elseif tEvent[1]=="modem_message" and tEvent[3]==CHAT_CHANNEL then if Data.Notification then end for i=2,17 do tChatHistory[i-1]=tChatHistory[i] end tChatHistory[17]=tEvent[5]
	elseif tEvent[1]=="mouse_click" and tEvent[2]==1 and tEvent[4]==1 then
		local _term=term.current()
		term.redirect(Core.parentTerm)
		Data=Core.getData()
		Draw.statusTime="right"
		local _color=Draw.sColor
		paintutils.drawLine(1,1,Screen.Width,1,1)
		Draw.setStatusColor(1)
		Draw.status()
		term.setCursorPos(1,1)
		Draw.cwrite("&5L &1R &eS&f")
		term.setCursorPos((Screen.Width-4)/2,1)
		Draw.cwrite((Data.bModem and "&fM " or "&8M ")..(Data.Notification and "&fN " or "&8N ")..(Data.H24 and "&fH " or "&8H "))
		local c=true
		while c do
			tEvent={os.pullEventRaw()}
			if tEvent[1]=="mouse_click" then
				local x,y=tEvent[3],tEvent[4]
				if tEvent[4]==1 then
					if tEvent[3]==(Screen.Width-4)/2 then if Data.bModem then Data.bModem=false else Data.bModem=true end
					elseif x==(Screen.Width-4)/2+2 then if Data.Notification then Data.Notification=false else Data.Notification=true end
					elseif x==(Screen.Width-4)/2+4 then if Data.H24 then Data.H24=false else Data.H24=true end
					elseif x==1 then c=nil Draw.setStatusColor(_color); Draw.statusTime="center"; c=nil Draw.setStatusColor(_color) Draw.statusTime="center" Draw.status() term.redirect(_term) shell.run("System/Lock.lua")
					elseif x==3 then c=nil os.reboot()
					elseif x==5 then c=nil os.shutdown() end
					term.setCursorPos((Screen.Width-4)/2,1)
					Draw.cwrite((Data.bModem and "&fM " or "&8M ")..(Data.Notification and "&fN " or "&8N ")..(Data.H24 and "&fH " or "&8H "))
					f=fs.open("System/Config.lua","w")
					f.write(textutils.serialize(Data))
					f.close()
				else
					c=nil
					Draw.setStatusColor(_color)
					Draw.statusTime="center"
					Draw.status()
					term.redirect(_term)
					
				end
			elseif tEvent[1]=="timer" then Core.timer=os.startTimer(60/72) Draw.status() end
		end
	elseif tEvent[1]=="key" and tEvent[2]==keys.f4 then break end
	if tEvent[1]=="mouse_click" or tEvent[1]=="monitor_touch" or tEvent[1]=="mouse_drag" then tEvent[4]=tEvent[4]-1 end
		ok,result=coroutine.resume(Core.thread,unpack(tEvent))
end