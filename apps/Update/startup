local args = {"RedOS","rOS"}
term.setTextColor(1)
tData=getData()
if http.get("https://raw.githubusercontent.com/RedOS/rOS/master/sys/version").readAll()==tData["version"] then
paintutils.drawFilledBox((w-9)/2,h/2-1,(w+9)/2,h/2+2,128)
term.setCursorPos((w-9)/2,h/2)
term.setTextColor(1)
term.setBackgroundColor(128)
print("No update found")
else
local function loading()
local img=paintutils.loadImage("apps/Update/load")
paintutils.drawFilledBox(w/2-6,h/2-1,w/2+6,h/2+2,128)
paintutils.drawImage(img,w/2-4,h/2+1)
term.setCursorPos((w-9)/2,h/2)
term.setTextColor(1)
term.setBackgroundColor(128)
print("Updating...")
status(1,false)
for i=1,5 do
paintutils.drawImage(img,w/2-4,h/2+1)
paintutils.drawPixel(w/2-4+2*(i-1),h/2+1,1)
os.sleep(.085)
end
status(1,false)
paintutils.drawImage(img,w/2-4,h/2+1)
end
args[3] = args[3] or "master"
args[4] = args[4] or ""
if not automated and #args < 2 then
        print("Usage:\n"..shell.getRunningProgram().." <user> <repo> [branch=master] [path=/]") error()
end
local function save(data,file)
        local file = shell.resolve(file)
        if not (fs.exists(string.sub(file,1,#file - #fs.getName(file))) and fs.isDir(string.sub(file,1,#file - #fs.getName(file)))) then
                if fs.exists(string.sub(file,1,#file - #fs.getName(file))) then fs.delete(string.sub(file,1,#file - #fs.getName(file))) end
                fs.makeDir(string.sub(file,1,#file - #fs.getName(file)))
        end
        local f = fs.open(file,"w")
        f.write(data)
        f.close()
end
local function download(url, file)
        save(http.get(url).readAll(),file)
end
if not fs.exists("apps/Update/json") then
        print("")
        download("http://pastebin.com/raw.php?i=4nRg9CHU","apps/Update/json")
end
os.loadAPI("apps/Update/json")
loading()
if pre_dl then loadstring(pre_dl)() else print("") end
local data = json.decode(http.get("https://api.github.com/repos/"..args[1].."/"..args[2].."/git/trees/"..args[3].."?recursive=1").readAll())
if data.message and data.message == "Not found" then error("Invalid repository",2) else
	for k,v in pairs(data.tree) do
	loading()
		-- Make directories
		if v.type == "tree" then
			fs.makeDir(fs.combine(args[4],v.path))
			if not hide_progress then
			end
		end
	end
	for k,v in pairs(data.tree) do
	loading()
		-- Download files
		if v.type == "blob" then
			download("https://raw.github.com/"..args[1].."/"..args[2].."/"..args[3].."/"..v.path,fs.combine(args[4],v.path))
			if not hide_progress then
			end
		end
	end
end
if post_dl then loadstring(post_dl)() end
if fs.exists("sys/delete") then
f=fs.open("sys/delete","w")
data=f.readAll()
f.close()
data=textutils.unserialize(data)
for i=1,#data do
if fs.exists(data[i]) then
fs.delete(data[i])
end
end
fs.delete("sys/delete")
end
os.reboot()
end
shell.run("sys/desktop")